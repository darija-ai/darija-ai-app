/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutpublicIndexImport } from './routes/_layout/(public)/index'
import { Route as LayoutpublicSignUpImport } from './routes/_layout/(public)/sign-up'
import { Route as LayoutpublicLoginImport } from './routes/_layout/(public)/login'
import { Route as LayoutpublicFeaturesImport } from './routes/_layout/(public)/features'
import { Route as LayoutpublicContactImport } from './routes/_layout/(public)/contact'
import { Route as LayoutpublicAboutImport } from './routes/_layout/(public)/about'
import { Route as LayoutprotectedSpeechToTextImport } from './routes/_layout/(protected)/speech-to-text'
import { Route as LayoutprotectedProfileImport } from './routes/_layout/(protected)/profile'
import { Route as LayoutprotectedDashboardImport } from './routes/_layout/(protected)/dashboard'
import { Route as LayoutprotectedTasksIndexImport } from './routes/_layout/(protected)/tasks/index'
import { Route as LayoutprotectedTasksAnnotateImport } from './routes/_layout/(protected)/tasks/annotate'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutpublicIndexRoute = LayoutpublicIndexImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicSignUpRoute = LayoutpublicSignUpImport.update({
  id: '/(public)/sign-up',
  path: '/sign-up',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicLoginRoute = LayoutpublicLoginImport.update({
  id: '/(public)/login',
  path: '/login',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicFeaturesRoute = LayoutpublicFeaturesImport.update({
  id: '/(public)/features',
  path: '/features',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicContactRoute = LayoutpublicContactImport.update({
  id: '/(public)/contact',
  path: '/contact',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicAboutRoute = LayoutpublicAboutImport.update({
  id: '/(public)/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedSpeechToTextRoute =
  LayoutprotectedSpeechToTextImport.update({
    id: '/(protected)/speech-to-text',
    path: '/speech-to-text',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutprotectedProfileRoute = LayoutprotectedProfileImport.update({
  id: '/(protected)/profile',
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedDashboardRoute = LayoutprotectedDashboardImport.update({
  id: '/(protected)/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedTasksIndexRoute = LayoutprotectedTasksIndexImport.update({
  id: '/(protected)/tasks/',
  path: '/tasks/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedTasksAnnotateRoute =
  LayoutprotectedTasksAnnotateImport.update({
    id: '/(protected)/tasks/annotate',
    path: '/tasks/annotate',
    getParentRoute: () => LayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/(protected)/dashboard': {
      id: '/_layout/(protected)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutprotectedDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(protected)/profile': {
      id: '/_layout/(protected)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutprotectedProfileImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(protected)/speech-to-text': {
      id: '/_layout/(protected)/speech-to-text'
      path: '/speech-to-text'
      fullPath: '/speech-to-text'
      preLoaderRoute: typeof LayoutprotectedSpeechToTextImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/about': {
      id: '/_layout/(public)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutpublicAboutImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/contact': {
      id: '/_layout/(public)/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof LayoutpublicContactImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/features': {
      id: '/_layout/(public)/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof LayoutpublicFeaturesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/login': {
      id: '/_layout/(public)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutpublicLoginImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/sign-up': {
      id: '/_layout/(public)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LayoutpublicSignUpImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/': {
      id: '/_layout/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutpublicIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(protected)/tasks/annotate': {
      id: '/_layout/(protected)/tasks/annotate'
      path: '/tasks/annotate'
      fullPath: '/tasks/annotate'
      preLoaderRoute: typeof LayoutprotectedTasksAnnotateImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(protected)/tasks/': {
      id: '/_layout/(protected)/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof LayoutprotectedTasksIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutprotectedDashboardRoute: typeof LayoutprotectedDashboardRoute
  LayoutprotectedProfileRoute: typeof LayoutprotectedProfileRoute
  LayoutprotectedSpeechToTextRoute: typeof LayoutprotectedSpeechToTextRoute
  LayoutpublicAboutRoute: typeof LayoutpublicAboutRoute
  LayoutpublicContactRoute: typeof LayoutpublicContactRoute
  LayoutpublicFeaturesRoute: typeof LayoutpublicFeaturesRoute
  LayoutpublicLoginRoute: typeof LayoutpublicLoginRoute
  LayoutpublicSignUpRoute: typeof LayoutpublicSignUpRoute
  LayoutpublicIndexRoute: typeof LayoutpublicIndexRoute
  LayoutprotectedTasksAnnotateRoute: typeof LayoutprotectedTasksAnnotateRoute
  LayoutprotectedTasksIndexRoute: typeof LayoutprotectedTasksIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutprotectedDashboardRoute: LayoutprotectedDashboardRoute,
  LayoutprotectedProfileRoute: LayoutprotectedProfileRoute,
  LayoutprotectedSpeechToTextRoute: LayoutprotectedSpeechToTextRoute,
  LayoutpublicAboutRoute: LayoutpublicAboutRoute,
  LayoutpublicContactRoute: LayoutpublicContactRoute,
  LayoutpublicFeaturesRoute: LayoutpublicFeaturesRoute,
  LayoutpublicLoginRoute: LayoutpublicLoginRoute,
  LayoutpublicSignUpRoute: LayoutpublicSignUpRoute,
  LayoutpublicIndexRoute: LayoutpublicIndexRoute,
  LayoutprotectedTasksAnnotateRoute: LayoutprotectedTasksAnnotateRoute,
  LayoutprotectedTasksIndexRoute: LayoutprotectedTasksIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/dashboard': typeof LayoutprotectedDashboardRoute
  '/profile': typeof LayoutprotectedProfileRoute
  '/speech-to-text': typeof LayoutprotectedSpeechToTextRoute
  '/about': typeof LayoutpublicAboutRoute
  '/contact': typeof LayoutpublicContactRoute
  '/features': typeof LayoutpublicFeaturesRoute
  '/login': typeof LayoutpublicLoginRoute
  '/sign-up': typeof LayoutpublicSignUpRoute
  '/': typeof LayoutpublicIndexRoute
  '/tasks/annotate': typeof LayoutprotectedTasksAnnotateRoute
  '/tasks': typeof LayoutprotectedTasksIndexRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof LayoutprotectedDashboardRoute
  '/profile': typeof LayoutprotectedProfileRoute
  '/speech-to-text': typeof LayoutprotectedSpeechToTextRoute
  '/about': typeof LayoutpublicAboutRoute
  '/contact': typeof LayoutpublicContactRoute
  '/features': typeof LayoutpublicFeaturesRoute
  '/login': typeof LayoutpublicLoginRoute
  '/sign-up': typeof LayoutpublicSignUpRoute
  '/': typeof LayoutpublicIndexRoute
  '/tasks/annotate': typeof LayoutprotectedTasksAnnotateRoute
  '/tasks': typeof LayoutprotectedTasksIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/(protected)/dashboard': typeof LayoutprotectedDashboardRoute
  '/_layout/(protected)/profile': typeof LayoutprotectedProfileRoute
  '/_layout/(protected)/speech-to-text': typeof LayoutprotectedSpeechToTextRoute
  '/_layout/(public)/about': typeof LayoutpublicAboutRoute
  '/_layout/(public)/contact': typeof LayoutpublicContactRoute
  '/_layout/(public)/features': typeof LayoutpublicFeaturesRoute
  '/_layout/(public)/login': typeof LayoutpublicLoginRoute
  '/_layout/(public)/sign-up': typeof LayoutpublicSignUpRoute
  '/_layout/(public)/': typeof LayoutpublicIndexRoute
  '/_layout/(protected)/tasks/annotate': typeof LayoutprotectedTasksAnnotateRoute
  '/_layout/(protected)/tasks/': typeof LayoutprotectedTasksIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/profile'
    | '/speech-to-text'
    | '/about'
    | '/contact'
    | '/features'
    | '/login'
    | '/sign-up'
    | '/'
    | '/tasks/annotate'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/profile'
    | '/speech-to-text'
    | '/about'
    | '/contact'
    | '/features'
    | '/login'
    | '/sign-up'
    | '/'
    | '/tasks/annotate'
    | '/tasks'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/(protected)/dashboard'
    | '/_layout/(protected)/profile'
    | '/_layout/(protected)/speech-to-text'
    | '/_layout/(public)/about'
    | '/_layout/(public)/contact'
    | '/_layout/(public)/features'
    | '/_layout/(public)/login'
    | '/_layout/(public)/sign-up'
    | '/_layout/(public)/'
    | '/_layout/(protected)/tasks/annotate'
    | '/_layout/(protected)/tasks/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/(protected)/dashboard",
        "/_layout/(protected)/profile",
        "/_layout/(protected)/speech-to-text",
        "/_layout/(public)/about",
        "/_layout/(public)/contact",
        "/_layout/(public)/features",
        "/_layout/(public)/login",
        "/_layout/(public)/sign-up",
        "/_layout/(public)/",
        "/_layout/(protected)/tasks/annotate",
        "/_layout/(protected)/tasks/"
      ]
    },
    "/_layout/(protected)/dashboard": {
      "filePath": "_layout/(protected)/dashboard.tsx",
      "parent": "/_layout"
    },
    "/_layout/(protected)/profile": {
      "filePath": "_layout/(protected)/profile.tsx",
      "parent": "/_layout"
    },
    "/_layout/(protected)/speech-to-text": {
      "filePath": "_layout/(protected)/speech-to-text.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/about": {
      "filePath": "_layout/(public)/about.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/contact": {
      "filePath": "_layout/(public)/contact.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/features": {
      "filePath": "_layout/(public)/features.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/login": {
      "filePath": "_layout/(public)/login.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/sign-up": {
      "filePath": "_layout/(public)/sign-up.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/": {
      "filePath": "_layout/(public)/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(protected)/tasks/annotate": {
      "filePath": "_layout/(protected)/tasks/annotate.tsx",
      "parent": "/_layout"
    },
    "/_layout/(protected)/tasks/": {
      "filePath": "_layout/(protected)/tasks/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
