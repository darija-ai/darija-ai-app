/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutpublicIndexImport } from './routes/_layout/(public)/index'
import { Route as LayoutpublicServicesImport } from './routes/_layout/(public)/services'
import { Route as LayoutprotectedDashboardImport } from './routes/_layout/(protected)/dashboard'
import { Route as LayoutpublicSignUpIndexImport } from './routes/_layout/(public)/sign-up/index'
import { Route as LayoutpublicSignInIndexImport } from './routes/_layout/(public)/sign-in/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutpublicIndexRoute = LayoutpublicIndexImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicServicesRoute = LayoutpublicServicesImport.update({
  id: '/(public)/services',
  path: '/services',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedDashboardRoute = LayoutprotectedDashboardImport.update({
  id: '/(protected)/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicSignUpIndexRoute = LayoutpublicSignUpIndexImport.update({
  id: '/(public)/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicSignInIndexRoute = LayoutpublicSignInIndexImport.update({
  id: '/(public)/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/(protected)/dashboard': {
      id: '/_layout/(protected)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutprotectedDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/services': {
      id: '/_layout/(public)/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof LayoutpublicServicesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/': {
      id: '/_layout/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutpublicIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/sign-in/': {
      id: '/_layout/(public)/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof LayoutpublicSignInIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/sign-up/': {
      id: '/_layout/(public)/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LayoutpublicSignUpIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutprotectedDashboardRoute: typeof LayoutprotectedDashboardRoute
  LayoutpublicServicesRoute: typeof LayoutpublicServicesRoute
  LayoutpublicIndexRoute: typeof LayoutpublicIndexRoute
  LayoutpublicSignInIndexRoute: typeof LayoutpublicSignInIndexRoute
  LayoutpublicSignUpIndexRoute: typeof LayoutpublicSignUpIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutprotectedDashboardRoute: LayoutprotectedDashboardRoute,
  LayoutpublicServicesRoute: LayoutpublicServicesRoute,
  LayoutpublicIndexRoute: LayoutpublicIndexRoute,
  LayoutpublicSignInIndexRoute: LayoutpublicSignInIndexRoute,
  LayoutpublicSignUpIndexRoute: LayoutpublicSignUpIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/dashboard': typeof LayoutprotectedDashboardRoute
  '/services': typeof LayoutpublicServicesRoute
  '/': typeof LayoutpublicIndexRoute
  '/sign-in': typeof LayoutpublicSignInIndexRoute
  '/sign-up': typeof LayoutpublicSignUpIndexRoute
}

export interface FileRoutesByTo {
  '/dashboard': typeof LayoutprotectedDashboardRoute
  '/services': typeof LayoutpublicServicesRoute
  '/': typeof LayoutpublicIndexRoute
  '/sign-in': typeof LayoutpublicSignInIndexRoute
  '/sign-up': typeof LayoutpublicSignUpIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/(protected)/dashboard': typeof LayoutprotectedDashboardRoute
  '/_layout/(public)/services': typeof LayoutpublicServicesRoute
  '/_layout/(public)/': typeof LayoutpublicIndexRoute
  '/_layout/(public)/sign-in/': typeof LayoutpublicSignInIndexRoute
  '/_layout/(public)/sign-up/': typeof LayoutpublicSignUpIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/dashboard' | '/services' | '/' | '/sign-in' | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/dashboard' | '/services' | '/' | '/sign-in' | '/sign-up'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/(protected)/dashboard'
    | '/_layout/(public)/services'
    | '/_layout/(public)/'
    | '/_layout/(public)/sign-in/'
    | '/_layout/(public)/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/(protected)/dashboard",
        "/_layout/(public)/services",
        "/_layout/(public)/",
        "/_layout/(public)/sign-in/",
        "/_layout/(public)/sign-up/"
      ]
    },
    "/_layout/(protected)/dashboard": {
      "filePath": "_layout/(protected)/dashboard.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/services": {
      "filePath": "_layout/(public)/services.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/": {
      "filePath": "_layout/(public)/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/sign-in/": {
      "filePath": "_layout/(public)/sign-in/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/sign-up/": {
      "filePath": "_layout/(public)/sign-up/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
