/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutpublicIndexImport } from './routes/_layout/(public)/index'
import { Route as LayoutpublicServicesImport } from './routes/_layout/(public)/services'
import { Route as LayoutprotectedDashboardImport } from './routes/_layout/(protected)/dashboard'
import { Route as LayoutprotectedAnnotatorImport } from './routes/_layout/(protected)/annotator'
import { Route as LayoutpublicSignUpIndexImport } from './routes/_layout/(public)/sign-up/index'
import { Route as LayoutpublicLoginIndexImport } from './routes/_layout/(public)/login/index'
import { Route as LayoutpublicFeaturesIndexImport } from './routes/_layout/(public)/features/index'
import { Route as LayoutpublicContactIndexImport } from './routes/_layout/(public)/contact/index'
import { Route as LayoutpublicAboutIndexImport } from './routes/_layout/(public)/about/index'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutpublicIndexRoute = LayoutpublicIndexImport.update({
  id: '/(public)/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicServicesRoute = LayoutpublicServicesImport.update({
  id: '/(public)/services',
  path: '/services',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedDashboardRoute = LayoutprotectedDashboardImport.update({
  id: '/(protected)/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutprotectedAnnotatorRoute = LayoutprotectedAnnotatorImport.update({
  id: '/(protected)/annotator',
  path: '/annotator',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicSignUpIndexRoute = LayoutpublicSignUpIndexImport.update({
  id: '/(public)/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicLoginIndexRoute = LayoutpublicLoginIndexImport.update({
  id: '/(public)/login/',
  path: '/login/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicFeaturesIndexRoute = LayoutpublicFeaturesIndexImport.update({
  id: '/(public)/features/',
  path: '/features/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicContactIndexRoute = LayoutpublicContactIndexImport.update({
  id: '/(public)/contact/',
  path: '/contact/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutpublicAboutIndexRoute = LayoutpublicAboutIndexImport.update({
  id: '/(public)/about/',
  path: '/about/',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/(protected)/annotator': {
      id: '/_layout/(protected)/annotator'
      path: '/annotator'
      fullPath: '/annotator'
      preLoaderRoute: typeof LayoutprotectedAnnotatorImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(protected)/dashboard': {
      id: '/_layout/(protected)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutprotectedDashboardImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/services': {
      id: '/_layout/(public)/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof LayoutpublicServicesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/': {
      id: '/_layout/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutpublicIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/about/': {
      id: '/_layout/(public)/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutpublicAboutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/contact/': {
      id: '/_layout/(public)/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof LayoutpublicContactIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/features/': {
      id: '/_layout/(public)/features/'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof LayoutpublicFeaturesIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/login/': {
      id: '/_layout/(public)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutpublicLoginIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/(public)/sign-up/': {
      id: '/_layout/(public)/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof LayoutpublicSignUpIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutprotectedAnnotatorRoute: typeof LayoutprotectedAnnotatorRoute
  LayoutprotectedDashboardRoute: typeof LayoutprotectedDashboardRoute
  LayoutpublicServicesRoute: typeof LayoutpublicServicesRoute
  LayoutpublicIndexRoute: typeof LayoutpublicIndexRoute
  LayoutpublicAboutIndexRoute: typeof LayoutpublicAboutIndexRoute
  LayoutpublicContactIndexRoute: typeof LayoutpublicContactIndexRoute
  LayoutpublicFeaturesIndexRoute: typeof LayoutpublicFeaturesIndexRoute
  LayoutpublicLoginIndexRoute: typeof LayoutpublicLoginIndexRoute
  LayoutpublicSignUpIndexRoute: typeof LayoutpublicSignUpIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutprotectedAnnotatorRoute: LayoutprotectedAnnotatorRoute,
  LayoutprotectedDashboardRoute: LayoutprotectedDashboardRoute,
  LayoutpublicServicesRoute: LayoutpublicServicesRoute,
  LayoutpublicIndexRoute: LayoutpublicIndexRoute,
  LayoutpublicAboutIndexRoute: LayoutpublicAboutIndexRoute,
  LayoutpublicContactIndexRoute: LayoutpublicContactIndexRoute,
  LayoutpublicFeaturesIndexRoute: LayoutpublicFeaturesIndexRoute,
  LayoutpublicLoginIndexRoute: LayoutpublicLoginIndexRoute,
  LayoutpublicSignUpIndexRoute: LayoutpublicSignUpIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/annotator': typeof LayoutprotectedAnnotatorRoute
  '/dashboard': typeof LayoutprotectedDashboardRoute
  '/services': typeof LayoutpublicServicesRoute
  '/': typeof LayoutpublicIndexRoute
  '/about': typeof LayoutpublicAboutIndexRoute
  '/contact': typeof LayoutpublicContactIndexRoute
  '/features': typeof LayoutpublicFeaturesIndexRoute
  '/login': typeof LayoutpublicLoginIndexRoute
  '/sign-up': typeof LayoutpublicSignUpIndexRoute
}

export interface FileRoutesByTo {
  '/annotator': typeof LayoutprotectedAnnotatorRoute
  '/dashboard': typeof LayoutprotectedDashboardRoute
  '/services': typeof LayoutpublicServicesRoute
  '/': typeof LayoutpublicIndexRoute
  '/about': typeof LayoutpublicAboutIndexRoute
  '/contact': typeof LayoutpublicContactIndexRoute
  '/features': typeof LayoutpublicFeaturesIndexRoute
  '/login': typeof LayoutpublicLoginIndexRoute
  '/sign-up': typeof LayoutpublicSignUpIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/(protected)/annotator': typeof LayoutprotectedAnnotatorRoute
  '/_layout/(protected)/dashboard': typeof LayoutprotectedDashboardRoute
  '/_layout/(public)/services': typeof LayoutpublicServicesRoute
  '/_layout/(public)/': typeof LayoutpublicIndexRoute
  '/_layout/(public)/about/': typeof LayoutpublicAboutIndexRoute
  '/_layout/(public)/contact/': typeof LayoutpublicContactIndexRoute
  '/_layout/(public)/features/': typeof LayoutpublicFeaturesIndexRoute
  '/_layout/(public)/login/': typeof LayoutpublicLoginIndexRoute
  '/_layout/(public)/sign-up/': typeof LayoutpublicSignUpIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/annotator'
    | '/dashboard'
    | '/services'
    | '/'
    | '/about'
    | '/contact'
    | '/features'
    | '/login'
    | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/annotator'
    | '/dashboard'
    | '/services'
    | '/'
    | '/about'
    | '/contact'
    | '/features'
    | '/login'
    | '/sign-up'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/(protected)/annotator'
    | '/_layout/(protected)/dashboard'
    | '/_layout/(public)/services'
    | '/_layout/(public)/'
    | '/_layout/(public)/about/'
    | '/_layout/(public)/contact/'
    | '/_layout/(public)/features/'
    | '/_layout/(public)/login/'
    | '/_layout/(public)/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/(protected)/annotator",
        "/_layout/(protected)/dashboard",
        "/_layout/(public)/services",
        "/_layout/(public)/",
        "/_layout/(public)/about/",
        "/_layout/(public)/contact/",
        "/_layout/(public)/features/",
        "/_layout/(public)/login/",
        "/_layout/(public)/sign-up/"
      ]
    },
    "/_layout/(protected)/annotator": {
      "filePath": "_layout/(protected)/annotator.tsx",
      "parent": "/_layout"
    },
    "/_layout/(protected)/dashboard": {
      "filePath": "_layout/(protected)/dashboard.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/services": {
      "filePath": "_layout/(public)/services.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/": {
      "filePath": "_layout/(public)/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/about/": {
      "filePath": "_layout/(public)/about/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/contact/": {
      "filePath": "_layout/(public)/contact/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/features/": {
      "filePath": "_layout/(public)/features/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/login/": {
      "filePath": "_layout/(public)/login/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/(public)/sign-up/": {
      "filePath": "_layout/(public)/sign-up/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
